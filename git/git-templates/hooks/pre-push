#!/bin/sh

# recipe stolen from https://hasper.info/git-hook-to-prevent-wip-commits-to-certain-branches/ and adjusted
# mixed with https://riptutorial.com/git/example/27005/git-pre-push-hook

# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# Information about the commits which are being pushed is
# supplied as lines to the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the
# log message contains "WIP" (work in progress)

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

IFS=' '
while read local_ref local_sha remote_ref remote_sha
do
  if [ "$local_sha" = $z40 ]
  then
    # Handle delete
    :
  else
    if [ "$remote_sha" = $z40 ]
    then
        # New branch, examine all commits
        range="$local_sha"
    else
        # Update to existing branch, examine new commits
        range="$remote_sha..$local_sha"
    fi

    echo "analysing the following range for WIP commits: $range"
    # Check for WIP commit
    commit=`git rev-list -n 1 --grep 'WIP' -i "$range"`
    if [ -n "$commit" ]
    then
      echo "Found WIP commit in $local_ref: $commit, not pushing."
      exit 1
    fi
  fi
done

exit 0
